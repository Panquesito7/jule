// Copyright 2022 The X Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

//doc:
// Returns the IEEE 754 binary representation of f,
// with the sign bit of f and the result in the same bit position.
// f32_bits(f32_from_bits(x)) == x.
@inline
pub f32_bits(const f f32) u32 { ret *(*u32)((voidptr)(&f)) }

//doc:
// Returns the floating-point number corresponding
// to the IEEE 754 binary representation b, with the sign bit of b
// and the result in the same bit position.
// f32_from_bits(f32_bits(x)) == x.
@inline
pub f32_from_bits(const b u32) f32 { ret *(*f32)((voidptr)(&b)) }

//doc:
// Returns the IEEE 754 binary representation of f,
// with the sign bit of f and the result in the same bit position,
// and f64_bits(f64_from_bits(x)) == x.
@inline
pub f64_bits(const f f64) u64 { ret *(*u64)((voidptr)(&f)) }

//doc:
// Returns the floating-point number corresponding
// to the IEEE 754 binary representation b, with the sign bit of b
// and the result in the same bit position.
// f64_from_bits(Float64bits(x)) == x.
@inline
pub f64_from_bits(const b u64) f64 { ret *(*f64)((voidptr)(&b)) }
