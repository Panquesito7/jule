package x

// Error messages.
var Errors = map[string]string{
	`file_not_x`:                 `this is not x source file: `,
	`invalid_token`:              `undefined code content`,
	`invalid_syntax`:             `invalid syntax`,
	`no_entry_point`:             `entry point (main) function is not defined`,
	`exist_name`:                 `name is already exist`,
	`brace_not_closed`:           `brace is opened but not closed`,
	`function_body_not_exist`:    `function body is not declared`,
	`missing_return`:             `missing return at end of function`,
	`invalid_numeric_range`:      `arithmetic value overflow`,
	`incompatible_type`:          `incompatible value type`,
	`operator_overflow`:          `operator overflow`,
	`invalid_operator`:           `invalid operator`,
	`invalid_datatype`:           `data type are not compatible`,
	`operator_notfor_string`:     `this operator is not defined for string type`,
	`operator_notfor_bool`:       `this operator is not defined for boolean type`,
	`operator_notfor_any`:        `this operator is not defined for any type`,
	`operator_notfor_float`:      `this operator is not defined for float type(s)`,
	`operator_notfor_int`:        `this operator is not defined for integer type(s)`,
	`operator_notfor_uint`:       `this operator is not defined for unsigned integer type(s)`,
	`name_not_defined`:           `name is not defined`,
	`type_missing`:               `data type missing`,
	`parameter_exist`:            `parameter is already exist in this name`,
	`argument_overflow`:          `argument overflow`,
	`argument_missing`:           `missing argument(s)`,
	`invalid_type`:               `invalid data type`,
	`invalid_tag`:                `invalid tag for type`,
	`entrypoint_have_return`:     `entry point is cannot have return type`,
	`entrypoint_have_parameters`: `entry point is cannot have parameter(s)`,
	`require_return_value`:       `return statements of non-void functions should have return value`,
	`void_function_return_value`: `void functions is cannot returns any value`,
	`missing_semicolon`:          `missing statement terminator at end of statement`,
	`bitshift_must_unsigned`:     `bit shifting value is must be unsigned`,
	`invalid_data_unary`:         `invalid data type for unary operator`,
	`invalid_data_plus`:          `invalid data type for plus operator`,
	`invalid_data_tilde`:         `invalid data type for tilde operator`,
}
