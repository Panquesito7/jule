// Auto generated by X compiler.
// X compiler version: @developer_beta 0.0.1
// Date:               16/10/2021 15.53 (DD/MM/YYYY) (HH.MM)

#pragma region X_STANDARD_IMPORTS
#include <iostream>
#include <functional>
#include <locale.h>
#pragma endregion X_STANDARD_IMPORTS

#pragma region X_BUILTIN_TYPES
typedef int8_t int8;
typedef int16_t int16;
typedef int32_t int32;
typedef int64_t int64;
typedef uint8_t uint8;
typedef uint16_t uint16;
typedef uint32_t uint32;
typedef uint64_t uint64;
typedef float float32;
typedef double float64;
typedef std::wstring str;
typedef wchar_t rune;

#define function std::function
#pragma endregion X_BUILTIN_TYPES

#pragma region X_BUILTIN_VALUES
#define null NULL
#pragma endregion X_BUILTIN_VALUES

#pragma region X_BUILTIN_FUNCTIONS
template<typename any>
inline void _out(any v) {
  std::wcout << v;
}

template<typename any>
inline void _outln(any v) {
  _out(v);
  std::wcout << std::endl;
}
#pragma endregion X_BUILTIN_FUNCTIONS

#pragma region TRANSPILED_X_CODE
#pragma region TYPES
typedef str _my_str;
typedef _my_str _string;
#pragma endregion TYPES

#pragma region PROTOTYPES
str _main();
#pragma endregion PROTOTYPES

#pragma region GLOBAL_VARIABLES
#pragma endregion GLOBAL_VARIABLES

#pragma region FUNCTIONS

str _main(){
  str _test = [&](){
    return L"";
  }();
  return L"";
}

#pragma endregion FUNCTIONS
#pragma endregion TRANSPILED_X_CODE

#pragma region X_ENTRY_POINT
int main() {
#pragma region X_ENTRY_POINT_STANDARD_CODES
  setlocale(0x0, "");
#pragma endregion X_ENTRY_POINT_STANDARD_CODES

  _main();

#pragma region X_ENTRY_POINT_END_STANDARD_CODES
  return EXIT_SUCCESS;
#pragma endregion X_ENTRY_POINT_END_STANDARD_CODES
}
#pragma endregion X_ENTRY_POINT