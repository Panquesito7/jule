// Copyright 2022 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use cpp "heap.hpp"

//jule:cdef
type[T]
cpp fn __julec_is_guaranteed(*T) bool

//jule:cdef
type[T]
cpp fn __julec_can_guarantee(*T) bool

//jule:cdef
type[T]
cpp fn __julec_guarantee(*T) bool

// Reports pointer is heap-guaranteed or not.
//
// - Returns false if pointer is nil.
//
//jule:inline
type[T]
pub fn is_guaranteed(ptr: *T) bool {
    ret cpp.__julec_is_guaranteed[T](ptr)
}

// Reports pointer is can heap-guarantee.
//
// - Returns false if pointer is nil.
// - Returns false if pointer is already heap-guaranteed.
//
//jule:inline
type[T]
pub fn can_guarantee(ptr: *T) bool {
    ret cpp.__julec_can_guarantee[T](ptr)
}

// Heap-guarantee to pointer if pointer is can guarantee.
//
//jule:inline
type[T]
pub fn guarantee(ptr: *T) bool {
    ret cpp.__julec_guarantee[T](ptr)
}
