// Copyright 2022 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use std::sys

//jule:namespace jule
cpp let mut command_line_args: []str

//jule:namespace jule
cpp let mut environment_variables: []str

// Holds the command-line arguments.
// Starts with the program name.
//
// Command-line arguments sets at runtime with init function.
// Initialize expression is nil.
// You got nil slice if used as initialize expression to any global.
pub static ARGS: []str = nil

// Holds the envrionment variables.
//
// Environment variables sets at runtime with init function.
// Initialize expression is nil.
// You got nil slice if used as initialize expression to any global.
pub static ENV: []str = nil

// Returns an absolute path name of the current working
// directory of the calling process.
//
// Possible errors:
//  Denied
pub fn working_dir(): (str, EnvError) {
    let (p, err) = __getwd()
    ret p, err
}

// Changes the current working directory to the given directory.
//
// Possible errors:
//  Denied IO Loop LongPath NotExist NotDir InsufficientMemory
//  Device
pub fn set_working_dir(path: str): EnvError {
    if path == "" {
        ret EnvError.NotDir
    }
    ret __chdir(path)
}

fn init() {
    unsafe {
        // Break immutability for set parsed command-line arguments.
        *(&ARGS) = cpp.command_line_args

        // Break immutability for set parsed environment variables.
        *(&ENV) = cpp.environment_variables
    }
}
