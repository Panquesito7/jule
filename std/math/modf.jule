// Copyright 2022 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

// Returns integer and fractional floating-point numbers
// that sum to f. Both values have the same sign as f.
//
// Special cases are:
//  modf(±inf) = ±inf, nan
//  modf(nan) = nan, nan
pub fn modf(f: f64): (integer: f64, frac: f64) {
	const MODF_MAXPOWTWO = 4.503599627370496000e+15
	let abs_f = abs(f)
	let mut i = 0.0
	if abs_f > MODF_MAXPOWTWO {
		i = f
	} else {
		i = abs_f + MODF_MAXPOWTWO
		i -= MODF_MAXPOWTWO
		for i > abs_f {
			i--
		}
		if f < 0.0 {
			i = -i
		}
	}
	ret i, f - i
}
