// Copyright 2023 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use cpp "<cstdio>"
use cpp "<sys/stat.h>"

cpp type _mode_t: uint
cpp type _off_t: uint

cpp struct stat{
	st_mode: cpp._mode_t
	st_size: cpp._off_t
}

cpp fn lseek(handle: int, offset: i64, origin: int): i64
cpp fn tell(handle: int): i64
cpp unsafe fn read(handle: int, dest: *unsafe, n: uint): int
cpp fn close(handle: int): int
cpp unsafe fn write(handle: int, buff: *unsafe, n: uint): int

// Wrapper for C's stat.
pub struct Stat {
	pub st_mode: uint
	pub st_size: uint
}

// Wrapper for C's lseek function.
pub fn seek(handle: int, offset: i64, origin: int): i64 {
	ret cpp.lseek(handle, offset, origin)
}

// Wrapper for C's tell function.
pub fn tell(handle: int): i64 { ret cpp.tell(handle) }

// Wrapper for C's read function.
pub fn read(handle: int, mut buff: []byte): int {
	ret unsafe { cpp.read(handle, &buff[0], uint(buff.len)) }
}

// Wrapper for C's close function.
pub fn close(handle: int): int { ret cpp.close(handle) }

// Wrapper for C's write function.
pub fn write(handle: int, buff: []byte): int {
	ret unsafe { cpp.write(handle, &buff[0], uint(buff.len)) }
}
