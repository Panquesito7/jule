// Copyright 2022 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use cpp "<sys/stat.h>"
use cpp "<dirent.h>"

use cpp "sys.hpp"

cpp struct stat{}

//jule:typedef
cpp struct DIR{}

cpp struct dirent {
	pub d_name: str
}

// This function actually equals to stat,
// just interface to ignore identifier already exist error of compiler.
cpp unsafe fn __julec_stat(path: str, handle: *cpp.stat): (err: int)
cpp fn opendir(path: str): *cpp.DIR
cpp unsafe fn closedir(mut dir: *cpp.DIR): int
cpp unsafe fn readdir(mut dir: *cpp.DIR): *cpp.dirent

pub let STDIN  = uintptr(0)
pub let STDOUT = uintptr(1)
pub let STDERR = uintptr(2)

pub fn open_dir(path: str): *cpp.DIR { ret cpp.opendir(path) }
pub unsafe fn read_dir(mut dir: *cpp.DIR): *cpp.dirent { ret cpp.readdir(dir) }
pub unsafe fn close_dir(mut dir: *cpp.DIR): int { ret cpp.closedir(dir) }

pub unsafe fn stat(path: str, handle: *cpp.stat): (ok: bool) {
	ret cpp.__julec_stat(path, handle) == 0
}
