// Copyright 2022 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

//doc:
// Allocated new n sized slice for given data type.
//
// Special cases are:
//  make[Item](n) = nil if n < 0
type[Item]
make(n int) []Item

//doc:
// Copies components of source slice to destination slice.
// Returns number of copied components.
//
// Special cases are:
//  copy[Item](dest, src) = length accepts as src.len if dest.len > src.len
//  copy[Item](dest, src) = length accepts as dest.len if src.len > dest.len
type[Item]
copy(dest, src []Item) int

//doc:
// Creates new required sized slice. Copies all components
// of given source slice and appends given components to end of new slice.
// Returns new slice, not changes given source slice.
// If you want append components to source slice, assign returned slice.
type[Item]
append(src []Item, ...components Item) []Item
