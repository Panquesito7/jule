// Copyright 2022 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

// Package utf16 implements encoding and decoding of UTF-16 sequences.

// The conditions REPLACEMENT_CHAR==std::unicode::REPLACEMENT_CHAR and
// MAX_RUNE==std::unicode::MAX_RUNE are verified in the tests.
// Defining them locally avoids this package depending on package unicode.

// Unicode replacement character.
const REPLACEMENT_CHAR = '\uFFFD'
// Maximum valid Unicode code point.
const MAX_RUNE = '\U0010FFFF'

// 0xd800-0xdc00 encodes the high 10 bits of a pair.
// 0xdc00-0xe000 encodes the low 10 bits of a pair.
// the value is those 20 bits plus 0x10000.
const SURR1 = 0xd800
const SURR2 = 0xdc00
const SURR3 = 0xe000

const SURR_SELF = 0x10000

// Reports whether the specified Unicode code point
// can appear in a surrogate pair.
pub fn is_surrogate(r: rune) bool {
	ret SURR1 <= r && r < SURR3
}
