// Copyright 2022 The X Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

// Package utf8 implements functions and constants to support text encoded in
// UTF-8. It includes functions to translate between runes and UTF-8 byte sequences.
// See https://en.wikipedia.org/wiki/UTF-8

// The conditions RUNE_ERROR==std::unicode::REPLACEMENT_CHAR and
// MAX_RUNE==std::unicode::MAX_RUNE are verified in the tests.
// Defining them locally avoids this package depending on package std::unicode.

// Numbers fundamental to the encoding.

//doc: The "error" rune or "Unicode replacement character"
pub const RUNE_ERROR: = '\uFFFD'

//doc: Characters below RUNE_SELF are represented as themselves in a single byte.
pub const RUNE_SELF: = 0x80

//doc: Maximum valid Unicode code point.
pub const MAX_RUNE: = '\U0010FFFF'

//doc: Maximum number of bytes of a UTF-8 encoded Unicode character.
pub const UTF_MAX: = 4

// Code points in the surrogate range are not valid for UTF-8.
const SURROGATE_MIN: = 0xD800
const SURROGATE_MAX: = 0xDFFF

//doc:
// Reports whether r can be legally encoded as UTF-8.
// Code points that are out of range or a surrogate half are illegal.
pub valid_rune(r rune) bool {
	match {
	case 0 <= r && r < SURROGATE_MIN:
		ret true
	case SURROGATE_MAX < r && r <= MAX_RUNE:
		ret true
	}
	ret false
}
