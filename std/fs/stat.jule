// Copyright 2022 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use std::sys::{self, S_IFDIR, S_IFREG}

// Stat information.
pub struct Stat {
	// Type and mode.
	pub mode: uint

	// Total size in bytes of regular file or symbolic link.
	pub size: uint
}

impl Stat {
	// Reports path is directory or not.
	pub fn is_dir(self): bool { ret self.mode&S_IFDIR == S_IFDIR }

	// Reports path is regular file or not.
	pub fn is_reg(self): bool { ret self.mode&S_IFREG == S_IFREG }
}

// Returns a Stat describing the path.
// Returns nil reference if error occurs.
//
// Possible errors: Denied IO Loop LongPath NotExist NotDir Overflow
pub fn stat(path: str): (s: &Stat, err: FsError) {
	let handle = std::sys::stat(path)
	if real(handle) {
		err = FsError.Ok
		s = &Stat{
			mode: handle.st_mode,
			size: handle.st_size,
		}
	} else {
		err = get_last_fs_error()
	}
	ret
}
