// Copyright 2023 The Jule Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use integrated for std::jule::integrated
use sys for std::sys

// Returns a Status describing the path.
// Returns nil reference if error occurs.
//
// Possible errors: Denied IO Loop LongPath NotExist NotDir Overflow
pub fn stat(path: str): (s: &Status, err: FsError) {
    let utf16_path = integrated::utf16_from_str(path)
    let mut handle = std::sys::Stat{}
    let code = unsafe { sys::wstat(&utf16_path[0], &handle) }
    if code != -1 {
        err = FsError.Ok
        s = &Status{
            mode: uint(handle.st_mode),
            size: uint(handle.st_size),
        }
    } else {
        err = get_last_fs_error()
    }
    ret
}
