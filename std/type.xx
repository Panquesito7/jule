// Copyright 2022 The X Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

//doc:
// Signed 8-bit integer.
type i8

//doc:
// Signed 16-bit integer.
type i16

//doc:
// Signed 32-bit integer.
type i32

//doc:
// Signed 64-bit integer.
type i64

//doc:
// Unsigned 8-bit integer.
type u8

//doc:
// Unsigned 16-bit integer.
type u16

//doc:
// Unsigned 32-bit integer.
type u32

//doc:
// Unsigned 16-bit integer.
type u64

//doc:
// 32-bit floating-point.
type f32

//doc:
// 64-bit floating-point.
type f64

//doc:
// It is a platform dependent integer type.
type int

//doc:
// It is a platform dependent unsigned integer type.
type uint

//doc:
// It is a platform dependent unsigned integer type
// that is big enough to hold a pointer.
// Can used for casting pointers to integers.
type uintptr

//doc:
// UTF-8 byte encoded character string.
type str

//doc:
// Boolean type for logical expressions.
type bool

//doc:
// It can be hold any data type and nil.
// Only supports equals (==) and not equals (!=) operators.
//
// x == y: true if x and y is nil
// x == y: true if x and y has same data type
type any

//doc:
// Is an alias for u8.
// It is used, by convention, to distinguish byte values from 8-bit unsigned
// integer values.
type byte u8

//doc:
// Is an alias for i32.
// It is used, by convention, to distinguish character values from integer values.
type rune i32
