// Copyright 2022 The X Programming Language.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use std::debug
use std::os

//doc:
// Internal assertion function.
// Writes fail message to <cerr> and exit failure if assertion failed.
@inline
_assert(expr bool, msg str) {
	if !std::debug::ENABLE || expr { ret }
	//cxx: std::cerr << "assertion error: " << @msg << std::endl << std::endl;
	//cxx: ___trace.ok();
	//cxx: ___trace.ok();
	//cxx: std::cout << ___trace.string();
	std::os::exit(std::os::EXIT_FAILURE)
}

//doc:
// Writes default fail message to <cerr> and exit failure if assertion failed.
@inline
pub assert(expr bool)
{ _assert(expr, "assertion failed") }

//doc:
// Writes fail message to <cerr> and exit failure if assertion failed.
@inline
pub assert_message(expr bool, msg str)
{ _assert(expr, msg) }

//doc:
// Panics with given error if assertion failed.
@inline
pub assert_panic(expr bool, error Error)
{ if std::debug::ENABLE && !expr { panic(error) } }
